name: cd-pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install dependencies
        run: |
          cargo install cargo-tarpaulin
      - name: Build and test
        run: |
          cargo build
          cargo test
      - name: Generate production compiled package for macOS ARM64
        run: |
          cargo build --release --target aarch64-apple-darwin
          mkdir -p release
          cp target/aarch64-apple-darwin/release/my-app release/my-app-macos-arm64
      - name: Generate production compiled package for macOS Intel
        run: |
          cargo build --release --target x86_64-apple-darwin
          mkdir -p release
          cp target/x86_64-apple-darwin/release/my-app release/my-app-macos-intel
      - name: Attach release artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-app-release
          path: release
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/*
          asset_name: my-app-${{ github.ref }}-macos-{filename}
          asset_content_type: application/octet-stream
#
